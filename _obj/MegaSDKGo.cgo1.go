// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/zero/megago/MegaSDKGo.go:1:1
package megasdkgo

/*
 #cgo CXXFLAGS: -std=c++11 -fpermissive
 #cgo LDFLAGS: -L./libs
 #cgo LDFLAGS: -lmega -lsqlite3 -lpthread -lcryptopp -lcurl -lssl -lcrypto -lcares -lsodium -lrt
 #include <stdlib.h>
 #include "GoHeader.h"
*/
import _ "unsafe"
import (
	"fmt"
	"unsafe"
)

const (
	StateNone       = 0
	StateQueued     = 1
	StateActive     = 2
	StatePaused     = 3
	StateRetrying   = 4
	StateCompleting = 5
	StateCompleted  = 6
	StateCancelled  = 7
	StateFailed     = 8
)

func NewMegaClient(API_KEY string) *MegaClient {
	( /*line :29:2*/_Cfunc_initMega /*line :29:11*/)(( /*line :29:13*/_Cfunc_CString /*line :29:21*/)(API_KEY))
	return &MegaClient{
		API_KEY: API_KEY,
	}
}

type MegaClient struct {
	API_KEY string
}

func (m *MegaClient) Login(email string, password string) error {
	ret := ( /*line :40:9*/_Cfunc_login /*line :40:15*/)(( /*line :40:17*/_Cfunc_CString /*line :40:25*/)(email), ( /*line :40:35*/_Cfunc_CString /*line :40:43*/)(password))
	defer func() {
		func() { _cgo0 := /*line :42:10*/unsafe.Pointer(ret); _cgoCheckPointer(_cgo0, nil); _Cfunc_free(_cgo0); }()
	}()
	if ret.errorCode != 0 {
		return fmt.Errorf("failed to login into mega account: %s", ( /*line :45:62*/_Cfunc_GoString /*line :45:71*/)(ret.errorString))
	}
	return nil
}

func (m *MegaClient) AddDownload(link string, dir string) (string, error) {
	ret := ( /*line :51:9*/_Cfunc_addDownload /*line :51:21*/)(( /*line :51:23*/_Cfunc_CString /*line :51:31*/)(link), ( /*line :51:40*/_Cfunc_CString /*line :51:48*/)(dir))
	defer func() {
		func() { _cgo0 := /*line :53:10*/unsafe.Pointer(ret); _cgoCheckPointer(_cgo0, nil); _Cfunc_free(_cgo0); }()
	}()
	gidgo := ( /*line :55:11*/_Cfunc_GoString /*line :55:20*/)(ret.gid)
	if ret.errorCode != 0 {
		return gidgo, fmt.Errorf("failed to add mega download: %s", ( /*line :57:63*/_Cfunc_GoString /*line :57:72*/)(ret.errorString))
	}
	return gidgo, nil
}

func (m *MegaClient) GetDownloadInfo(gid string) *DownloadInfo {
	di := NewDownloadInfo()
	status := ( /*line :64:12*/_Cfunc_getDownloadByGid /*line :64:29*/)(( /*line :64:31*/_Cfunc_CString /*line :64:39*/)(gid))
	if status == nil {
		return di
	}
	di.Name = ( /*line :68:12*/_Cfunc_GoString /*line :68:21*/)(status.name)
	di.ErrorCode = int(status.errorCode)
	di.Speed = int64(status.speed)
	di.CompletedLength = int64(status.completedLength)
	di.TotalLength = int64(status.totalLength)
	di.Gid = gid
	di.ErrorString = ( /*line :74:19*/_Cfunc_GoString /*line :74:28*/)(status.errorString)
	di.State = int(status.state)
	func() { _cgo0 := /*line :76:9*/unsafe.Pointer(status); _cgoCheckPointer(_cgo0, nil); _Cfunc_free(_cgo0); }()
	return di
}

func (m *MegaClient) CancelDownload(gid string) error {
	( /*line :81:2*/_Cfunc_cancelDownload /*line :81:17*/)(( /*line :81:19*/_Cfunc_CString /*line :81:27*/)(gid))
	return nil
}
